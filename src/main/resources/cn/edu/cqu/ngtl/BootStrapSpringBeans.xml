<!--

    Copyright 2005-2016 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:beans="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:jms="http://www.springframework.org/schema/jms"
	   xmlns:lang="http://www.springframework.org/schema/lang"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:oxm="http://www.springframework.org/schema/oxm"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
                           http://www.springframework.org/schema/jms
                           http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
                           http://www.springframework.org/schema/lang
                           http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                           http://www.springframework.org/schema/oxm
                           http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!--
        Kuali Rice ArcheType Help

        This is the bootstrap Spring file loads the Kuali Rice Configuration such as transaction
        managers, datasources and the Rice Configurer.

    Project Spring Beans can be placed at the end of this file.

    Also notice this Spring file loads the internal BootStrapConfig.xml file.
    Properties in this file can be referenced in this file using Spring's
    property replacement mechanism.
    -->


	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" value="#{bootstrapConfig.properties}"/>
	</bean>

	<bean id="bootstrapConfig" class="org.kuali.rice.core.impl.config.property.ConfigFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:cn/edu/cqu/ngtl/BootStrapConfig.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.kuali.rice.core.impl.config.property.ConfigInitializer.initialize"/>
		<property name="arguments">
			<list>
				<ref bean="bootstrapConfig"/>
			</list>
		</property>
	</bean>

	<import resource="classpath:org/kuali/rice/core/RiceJTASpringBeans.xml"/>
	<import resource="classpath:org/kuali/rice/core/RiceDataSourceSpringBeans.xml"/>
	<import resource="classpath:org/kuali/rice/config/RiceSpringBeans.xml"/>

	<!--an application specific service-->
	<bean id="productService" class="cn.edu.cqu.ngtl.MultiplicationProductServiceImpl"/>

	<import resource="classpath:org/kuali/rice/krad/config/KRADDependentModuleCommonImports.xml"/>
	<import resource="classpath:org/kuali/rice/krad/config/KRADSpringBeans-jpa-common.xml"/>
	<alias alias="kradApplicationDataSource" name="riceDataSource"/>
	<bean id="jpaPersistenceUnitName" class="java.lang.String">
		<constructor-arg value="enrollAccountApp"/>
	</bean>
	<util:list id="jpaPackagesToScan">
		<!-- 重要！这里是dataobjects的bao -->
		<value>cn.edu.cqu.ngtl.dataobject</value>
		<value>cn.edu.cqu.ngtl.tools.converter</value>
	</util:list>
	<util:list id="managedClassNames"/>
	<util:list id="additionalMetadataProviders"/>
	<util:list id="springMetadataFileLocations"/>
	<bean id="enrollModuleConfiguration" class="org.kuali.rice.krad.bo.ModuleConfiguration">
		<property name="namespaceCode" value="KR-SAP"/>
		<property name="initializeDataDictionary" value="true"/>
		<property name="dataDictionaryPackages">
			<list>
				<!--这里指定了view的路径-->
				<value>classpath:cn/edu/cqu/ngtl/ui</value>
			</list>
		</property>
		<property name="packagePrefixes">
			<list>
				<value>cn.edu.cqu.ngtl</value>
			</list>
		</property>
		<property name="providers">
			<list>
				<ref bean="jpaPersistenceProvider"/>
				<ref bean="metadataProvider"/>
			</list>
		</property>
	</bean>
	<bean id="sampleAppModuleService" class="org.kuali.rice.krad.service.impl.ModuleServiceBase">
		<property name="moduleConfiguration" ref="enrollModuleConfiguration"/>
	</bean>
	<bean class="org.kuali.rice.core.framework.resourceloader.RiceSpringResourceLoaderConfigurer">
		<property name="localServiceName" value="SampleAppContext"/>
	</bean>
	<bean id="configurationService" class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean">
		<property name="serviceName" value="kualiConfigurationService"/>
	</bean>
	<bean id="rice.ksb.serviceBus"
		  class="org.kuali.rice.core.framework.resourceloader.GlobalResourceLoaderServiceFactoryBean">
		<property name="serviceName" value="rice.ksb.serviceBus"/>
	</bean>
</beans>
